{"version":3,"sources":["components/LoaderComponent.js","screens/SensorsScreen.js","components/NavBarComponent.js","screens/ActorsScreen.js","screens/NotfountScreen.js","App.js","index.js"],"names":["LoaderComponent","Spinner","animation","role","style","width","height","margin","display","className","SensorsScreen","useState","sensors","setSensors","loading","setLoading","useEffect","axios","get","then","res","data","catch","err","console","log","Table","striped","bordered","hover","map","sensor","sensorid","sensorname","sensordata","sensortype","NavBar","Navbar","bg","expand","to","Brand","Toggle","Collapse","id","Nav","maxHeight","navbarScroll","Link","ActorsScreen","actors","setActors","actorDisabled","setActorDisabled","actor","actorid","actorname","actorstatus","onClick","status","post","Button","variant","NotfoundScreen","App","Container","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abd3573c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst LoaderComponent = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: \"100px\",\n        height: \"100px\",\n        margin: \"auto\",\n        display: \"block\",\n      }}\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default LoaderComponent;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport LoaderComponent from \"../components/LoaderComponent\";\n\nconst SensorsScreen = () => {\n  const [sensors, setSensors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get(\"http://webswitch.ir:3000/sensors\")\n      .then((res) => {\n        setSensors(res.data.sensors);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    <div>\n      <h1>Sensors List:</h1>\n      {loading ? (\n        <LoaderComponent />\n      ) : (\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>Sensor Id</th>\n              <th>Sensor Name</th>\n              <th>Sensor Data</th>\n              <th>Sensor Type</th>\n              <th>Type Symbol</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sensors.map((sensor) => (\n              <tr key={sensor.sensorid}>\n                <td>{sensor.sensorid}</td>\n                <td>{sensor.sensorname}</td>\n                <td>{sensor.sensordata}</td>\n                <td>{sensor.sensortype}</td>\n                <td>\n                  {\n                  sensor.sensortype === 2 && (sensor.sensordata >= 0 && sensor.sensordata <= 25) ? <i className=\"fas fa-battery-quarter fa-3x\"></i> :\n                  sensor.sensortype === 2 && (sensor.sensordata >= 26 && sensor.sensordata <= 50) ? <i className=\"fas fa-battery-half fa-3x\"></i> : \n                  sensor.sensortype === 2 && (sensor.sensordata >= 51 && sensor.sensordata <= 75) ? <i className=\"fas fa-battery-three-quarters fa-3x\"></i> : \n                  sensor.sensortype === 2 && (sensor.sensordata >= 76 && sensor.sensordata <= 100) ? <i className=\"fas fa-battery-full fa-3x\"></i> :\n                  \n                  sensor.sensortype === 1 && (sensor.sensordata >= 0 && sensor.sensordata <= 25) ? <i className=\"fas fa-clock text-danger fa-3x\"></i> :\n                  sensor.sensortype === 1 && (sensor.sensordata >= 26 && sensor.sensordata <= 50) ? <i className=\"fas fa-clock text-warning fa-3x\"></i> : \n                  sensor.sensortype === 1 && (sensor.sensordata >= 51 && sensor.sensordata <= 75) ? <i className=\"fas fa-clock text-info fa-3x\"></i> : \n                  sensor.sensortype === 1 && (sensor.sensordata >= 76 && sensor.sensordata <= 100) ? <i className=\"fas fa-clock text-success fa-3x\"></i> :\n                  \n                    null\n                }\n                  \n                  </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default SensorsScreen;\n","import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst NavBar = () => {\n  return (\n    <header>\n      <Navbar bg=\"dark\" expand=\"lg\">\n        <LinkContainer to=\"/\">\n          <Navbar.Brand className=\"text-white\">BaserApp</Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\n        <Navbar.Collapse id=\"navbarScroll\">\n          <Nav\n            className=\"mr-auto my-2 my-lg-0\"\n            style={{ maxHeight: \"100px\" }}\n            navbarScroll\n          >\n            <LinkContainer to=\"/\">\n              <Nav.Link className=\"text-white\">Sensors</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to=\"/actors\">\n              <Nav.Link className=\"text-white\">Actors</Nav.Link>\n            </LinkContainer>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default NavBar;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\n\nconst ActorsScreen = () => {\n  const [actors, setActors] = useState([]);\n  const [actorDisabled, setActorDisabled] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(\"http://webswitch.ir:3000/actors\")\n      .then((res) => {\n        setActors(res.data.actors);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [actorDisabled]);\n\n  const switchActor = (id, status) => {\n    setActorDisabled(id);\n    axios\n      .post(\"http://webswitch.ir:3000/actors\", {\n        actorid: id,\n        actorstatus: status === 0 ? 1 : 0,\n      })\n      .then((res) => {\n        setActors(res.data.actors);\n        setActorDisabled(null);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div>\n      <h1>Actors List:</h1>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Actor Id</th>\n            <th>Actor Name</th>\n            <th>Actor Status</th>\n            <th>Status Color</th>\n            <th>Switch Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {actors &&\n            actors.map((actor) => (\n              <tr key={actor.actorid}>\n                <td>{actor.actorid}</td>\n                <td>{actor.actorname}</td>\n                <td>{actor.actorstatus}</td>\n                <td>\n                  {actorDisabled === actor.actorid ? (\n                    <i className=\"far fa-lightbulb fa-3x\"></i>\n                  ) : actor.actorstatus === 0 ? (\n                    <i className=\"far fa-lightbulb fa-3x text-info\"></i>\n                  ) : (\n                    <i className=\"fas fa-lightbulb fa-3x text-warning\"></i>\n                  )}\n                </td>\n\n                <td\n                  className=\"actor-switch-button\"\n                  onClick={() => switchActor(actor.actorid, actor.actorstatus)}\n                >\n                  <Button variant=\"info\" className=\"rounded btn btn-sm\">\n                    Switch\n                  </Button>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default ActorsScreen;\n","import React from \"react\";\n\nconst NotfoundScreen = () => {\n  return <>\n  <h1>404, page not found!</h1>\n  </>;\n};\n\nexport default NotfoundScreen;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport SensorsScreen from \"./screens/SensorsScreen\";\nimport NavBar from \"./components/NavBarComponent\";\nimport ActorsScreen from \"./screens/ActorsScreen\";\nimport NotfoundScreen from \"./screens/NotfountScreen\";\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <main className=\"py-4\">\n        <Container>\n          <Switch>\n            <Route path=\"/\" component={SensorsScreen} exact />\n            <Route path=\"/actors\" component={ActorsScreen} exact />\n            <Route component={NotfoundScreen} />\n          </Switch>\n        </Container>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}